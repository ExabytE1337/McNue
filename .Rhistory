substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
str_remove_1gl <- function(x) {
substr(x,1,1)[substr(x,1,1) == "l" | substr(x,1,1) == "g"] <- ""
x
}
menu <- tibble(podnik = character(), polievka = character(), jedlo_1 = character(), jedlo_2 = character(), jedlo_3 = character(), jedlo_4 = character())
(menu[1,] <- bioland())
(menu[2,] <- bluebear())
(menu[3,] <- ceska())
(menu[4,] <- dilema())
(menu[5,] <- kasa(sme = TRUE))
(menu[6,] <- mestiansky())
(menu[7,] <- mnamka())
(menu[8,] <- veda())
(menu[9,] <- veglife())
(menu[10,] <- realstar())
(menu[11,] <- suvlaki())
(menu[12,] <- lenka())
(menu[13,] <- svadbykari())
(menu[14,] <- redcafe())
url_lenka <- "https://www.jedlalenka.sk/"
download.file(url_lenka, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".insert-page-30") %>%
html_children() %>%
html_text()
jedlo
#jedlo <- jedlo[2:6]
jedlo <- str_split(jedlo,"\r") %>% unlist() %>% str_remove("\n")
jedlo
jedlo <- jedlo[2:6]
c("Jedla_lenka",jedlo)
lenka <- function(){
url_lenka <- "https://www.jedlalenka.sk/"
download.file(url_lenka, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".insert-page-30") %>%
html_children() %>%
html_text()
#jedlo <- jedlo[2:6]
jedlo <- str_split(jedlo,"\r") %>% unlist() %>% str_remove("\n")
jedlo <- jedlo[2:6]
# kde <- str_match(a,"^[[:upper:]]") %>% is.na() %>% `!` %>% which()
# jedlo[1] <- paste(a[kde],collapse = "/")
return(c("Jedla_lenka",jedlo))
}
(menu[12,] <- lenka())
(menu[13,] <- svadbykari())
(menu[4,] <- dilema())
source("slovak_language_destroyer.R",encoding="utf-8")
menu <-
menu %>%
mutate_all(.fun = slovak_language_destroyer)
# menu2 <-
#   menu2 %>%
#   mutate_all(.fun = slovak_language_destroyer)
#destroy the nuances in data
source("benson_string_destroyer.R")
menu <-
menu %>%
mutate_all(.fun = benson_string_destroyer)
# menu2 <-
#   menu2 %>%
#   mutate_all(.fun = benson_string_destroyer)
menu
remove_g_l <- function(x){
x <-
x %>%
str_replace_all("  l","") %>%
str_replace_all("  g","") %>%
str_replace_all(" g ","") %>%
str_replace_all(" l ","") %>%
str_trim()
y <-
x %>%
str_sub(end = 2) %>%
str_remove_all("g ") %>%
str_remove_all("l ")
x <- paste0(y,str_sub(x,3))
return(x)
}
menu <-
menu %>% mutate_all(.fun = remove_g_l)
menu <-
menu %>%
mutate_all(.fun = str_remove_1gl)
#randomize order
#menu <- menu[sample(1:nrow(menu),nrow(menu)),]
menu <-
menu %>%
mutate_all(.fun =  str_to_1up)
menu <- menu %>% arrange(podnik)
# menu2
#save the menu in a text file as an ascii table
menu_ascii <- pandoc.table.return(menu, style = "grid", split.tables = Inf, split.cells = 30) %>% str_sub(3) # the last thing removes the first 2 /n
menu_ascii
write.table(menu_ascii,file = "menu.txt", row.names = F, col.names = F, quote = F)
# menu2_ascii <- pandoc.table.return(menu2, style = "grid", split.tables = Inf, split.cells = 30)
# write.table(menu2_ascii,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
beep <- readChar("beep_boop.txt",file.info("beep_boop.txt")$size)
write.table(beep,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
pandoc.table.return(iris, style = "grid", split.tables = Inf, split.cells = 30)
library(tidyverse)
library(rvest)
library(lubridate)
library(pander)
pandoc.table.return(iris, style = "grid", split.tables = Inf, split.cells = 30)
a <- pandoc.table.return(iris, style = "grid", split.tables = Inf, split.cells = 30)
View(a)
a
s %>% str_split("\n")
a %>% str_split("\n")
a %>% str_split("\n") %>% .[seq(2,305, by =2 )]
seq(2,305, by =2 )
a %>% str_split("\n") %>% .[seq(2,305, by =2 )]
a %>% str_split("\n") %>%
a
a %>% str_split("\n")
a %>% str_split("\n") -> a
a
a[seq(2,305,by =2)]
a[3]
a[3,1]
str(a)
a[[1]]
a[[1]][1]
a[[1]][3]
a[[1]][seq(2,305,by =2)]
a[[1]][seq(2,305,by =2)] %>% str_remove_all("|")
a[[1]][seq(2,305,by =2)] %>% str_remove_all("|")
a[[1]][seq(2,305,by =2)] %>% str_trim("")
a[[1]][seq(2,305,by =2)] %>% str_trim()
a[[1]][seq(2,305,by =2)] %>% .[1]
a[[1]][seq(2,305,by =2)] %>% .[2]
a[[1]][seq(2,305,by =2)] %>% .[2][1]
a[[1]][seq(2,305,by =2)] %>% .[2] %>% str_sub(1)
a[[1]][seq(2,305,by =2)] %>% .[2] %>% str_sub(start = 1)
a[[1]][seq(2,305,by =2)] %>% .[2]
a[[1]][seq(2,305,by =2)] %>% str_remove_all("|")
#destroy the nuances in data
source("benson_string_destroyer.R")
a[[1]][seq(2,305,by =2)] %>% benson_string_destroyer()
a[[1]][seq(2,305,by =2)] %>% str_remove_all("|")
|
a[[1]][seq(2,305,by =2)] %>% str_remove_all("l")
a[[1]][seq(2,305,by =2)] %>% str_remove_all("|")
a[[1]][seq(2,305,by =2)] %>% str_remove_all("\\|")
a[[1]][seq(2,305,by =2)] %>% str_remove_all("\\|") %>% str_split()
a[[1]][seq(2,305,by =2)] %>% str_remove_all("\\|") %>% str_split("  ")
a[[1]][seq(2,305,by =2)] %>% str_remove_all("\\|") %>% str_split_fixed
?str_split_fixes
?str_split_fixed
a[[1]][seq(2,305,by =2)] %>% str_replace_all("\\|","\\\t")
a[[1]][seq(2,305,by =2)] %>% str_replace_all("\\|","\\\t") %>% str_split("\\\t")
a[[1]][seq(2,305,by =2)] %>% str_replace_all("\\|","\\\t") %>% str_split_fixed("\\\t",5)
a[[1]][seq(2,305,by =2)] %>% str_replace_all("\\|","\\\t") %>% str_split"\\\t")
a[[1]][seq(2,305,by =2)] %>% str_replace_all("\\|","\\\t") %>% str_split("\\\t")
a[[1]][seq(2,305,by =2)] %>% str_replace_all("\\|","splitme") %>% str_split("splitme")
a[[1]][seq(2,305,by =2)] %>% str_replace_all("\\|","splitme") %>% str_split("splitme") %>% str_trim
a[[1]][seq(2,305,by =2)] %>% str_remove_all("\\|") %>% str_trim()
install.packages(c("markdown", "numDeriv", "tibble"))
library(tidyverse)
library(rvest)
library(lubridate)
library(pander)
#run web scraper
R.utils::sourceDirectory("Restaurants",encoding = "UTF-8")
#lapply(list.files("Restaurants"),function(x) source(paste0("Restaurants/",x)))
str_to_1up <- function(x) {
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
str_remove_1gl <- function(x) {
substr(x,1,1)[substr(x,1,1) == "l" | substr(x,1,1) == "g"] <- ""
x
}
menu <- tibble(podnik = character(), polievka = character(), jedlo_1 = character(), jedlo_2 = character(), jedlo_3 = character(), jedlo_4 = character())
(menu[1,] <- bioland())
(menu[2,] <- bluebear())
(menu[3,] <- ceska())
(menu[4,] <- dilema())
(menu[5,] <- kasa(sme = TRUE))
(menu[6,] <- mestiansky())
(menu[7,] <- mnamka())
(menu[8,] <- veda())
(menu[9,] <- veglife())
(menu[10,] <- realstar())
(menu[11,] <- suvlaki())
(menu[12,] <- lenka())
(menu[13,] <- svadbykari())
(menu[14,] <- redcafe())
(menu[13,] <- svadbykari())
(menu[11,] <- suvlaki())
#menu <- na.omit(menu)
#remove special slovak characters
source("slovak_language_destroyer.R",encoding="utf-8")
menu <-
menu %>%
mutate_all(.fun = slovak_language_destroyer)
# menu2 <-
#   menu2 %>%
#   mutate_all(.fun = slovak_language_destroyer)
#destroy the nuances in data
source("benson_string_destroyer.R")
menu <-
menu %>%
mutate_all(.fun = benson_string_destroyer)
# menu2 <-
#   menu2 %>%
#   mutate_all(.fun = benson_string_destroyer)
menu
remove_g_l <- function(x){
x <-
x %>%
str_replace_all("  l","") %>%
str_replace_all("  g","") %>%
str_replace_all(" g ","") %>%
str_replace_all(" l ","") %>%
str_trim()
y <-
x %>%
str_sub(end = 2) %>%
str_remove_all("g ") %>%
str_remove_all("l ")
x <- paste0(y,str_sub(x,3))
return(x)
}
menu <-
menu %>% mutate_all(.fun = remove_g_l)
menu <-
menu %>%
mutate_all(.fun = str_remove_1gl)
#randomize order
#menu <- menu[sample(1:nrow(menu),nrow(menu)),]
menu <-
menu %>%
mutate_all(.fun =  str_to_1up)
menu <- menu %>% arrange(podnik)
# menu2
#save the menu in a text file as an ascii table
menu_ascii <- pandoc.table.return(menu, style = "grid", split.tables = Inf, split.cells = 30) %>% str_sub(3) # the last thing removes the first 2 /n
menu_ascii
write.table(menu_ascii,file = "menu.txt", row.names = F, col.names = F, quote = F)
# menu2_ascii <- pandoc.table.return(menu2, style = "grid", split.tables = Inf, split.cells = 30)
# write.table(menu2_ascii,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
beep <- readChar("beep_boop.txt",file.info("beep_boop.txt")$size)
write.table(beep,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
library(tidyverse)
x <- c("apple", "banana", "pear")
str_view(x, "an")
install.packages(c("DT", "mime"))
library(tidyverse)
library(rvest)
library(lubridate)
library(pander)
#run web scraper
R.utils::sourceDirectory("Restaurants",encoding = "UTF-8")
#lapply(list.files("Restaurants"),function(x) source(paste0("Restaurants/",x)))
str_to_1up <- function(x) {
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
str_remove_1gl <- function(x) {
substr(x,1,1)[substr(x,1,1) == "l" | substr(x,1,1) == "g"] <- ""
x
}
menu <- tibble(podnik = character(), polievka = character(), jedlo_1 = character(), jedlo_2 = character(), jedlo_3 = character(), jedlo_4 = character())
(menu[1,] <- bioland())
(menu[2,] <- bluebear())
(menu[3,] <- ceska())
(menu[4,] <- dilema())
(menu[5,] <- kasa(sme = TRUE))
(menu[6,] <- mestiansky())
(menu[7,] <- mnamka())
(menu[8,] <- veda())
url_veda <- "https://restauracie.sme.sk/restauracia/veda-vegetarian-vegan_10202-stare-mesto_2949/denne-menu"
download.file(url_veda, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".dnesne_menu .jedlo_polozka .left") %>% html_text()
jedlo
str_trim(jedlo)
jedlo <- str_trim(jedlo)
jedlo[c(4,seq(4,16,by = 2))]
jedlo[seq(4,16,by = 2)]
jedlo[c(4,seq(9,16,by = 2))]
veda <- function(){
url_veda <- "https://restauracie.sme.sk/restauracia/veda-vegetarian-vegan_10202-stare-mesto_2949/denne-menu"
download.file(url_veda, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".dnesne_menu .jedlo_polozka .left") %>% html_text()
jedlo <- str_trim(jedlo)
jedlo <- jedlo[c(4,seq(9,16,by = 2))]
jedlo <- jedlo %>% str_replace("VEGAN","") %>% str_replace("NOT","")
jedlo <- jedlo %>% str_sub(start =2) %>% str_trim()
jedlo <- jedlo %>% str_to_lower()
return(c("Veda",jedlo))
}
(menu[8,] <- veda())
(menu[9,] <- veglife())
(menu[10,] <- realstar())
(menu[11,] <- suvlaki())
(menu[12,] <- lenka())
realstar <- function(){
url <- "https://www.realstar.sk/denne-menu"
download.file(url, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
day_index <- c(3,6,8,10,12)
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday","Sunday")
today <- format(Sys.Date(), "%A")
today_i <- day_index[which(days_of_the_week %in% today)]
jedlo <- raw %>%
html_nodes(paste0("table.denne_menu:nth-child(",today_i,")")) %>%
html_children() %>%
html_children() %>%
html_text() %>%
str_trim()
jedlo <- jedlo[c(1,3:5)]
jedlo <- jedlo %>% str_replace_all("\r","") %>% str_replace_all("\n","")
jedlo[2:4] <- jedlo[2:4] %>% str_sub(15)
jedlo <- jedlo %>% str_replace_all("príloha","")
jedlo <- jedlo %>% str_replace_all("ks "," ")
jedlo[1] <- jedlo[1] %>% str_sub(11)
return(c("U Majky",jedlo,""))
}
(menu[10,] <- realstar())
(menu[13,] <- svadbykari())
(menu[14,] <- redcafe())
source("slovak_language_destroyer.R",encoding="utf-8")
menu <-
menu %>%
mutate_all(.fun = slovak_language_destroyer)
# menu2 <-
#   menu2 %>%
#   mutate_all(.fun = slovak_language_destroyer)
#destroy the nuances in data
source("benson_string_destroyer.R")
menu <-
menu %>%
mutate_all(.fun = benson_string_destroyer)
# menu2 <-
#   menu2 %>%
#   mutate_all(.fun = benson_string_destroyer)
menu
remove_g_l <- function(x){
x <-
x %>%
str_replace_all("  l","") %>%
str_replace_all("  g","") %>%
str_replace_all(" g ","") %>%
str_replace_all(" l ","") %>%
str_trim()
y <-
x %>%
str_sub(end = 2) %>%
str_remove_all("g ") %>%
str_remove_all("l ")
x <- paste0(y,str_sub(x,3))
return(x)
}
menu <-
menu %>% mutate_all(.fun = remove_g_l)
menu <-
menu %>%
mutate_all(.fun = str_remove_1gl)
#randomize order
#menu <- menu[sample(1:nrow(menu),nrow(menu)),]
menu <-
menu %>%
mutate_all(.fun =  str_to_1up)
menu <- menu %>% arrange(podnik)
# menu2
#save the menu in a text file as an ascii table
menu_ascii <- pandoc.table.return(menu, style = "grid", split.tables = Inf, split.cells = 30) %>% str_sub(3) # the last thing removes the first 2 /n
menu_ascii
write.table(menu_ascii,file = "menu.txt", row.names = F, col.names = F, quote = F)
# menu2_ascii <- pandoc.table.return(menu2, style = "grid", split.tables = Inf, split.cells = 30)
# write.table(menu2_ascii,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
beep <- readChar("beep_boop.txt",file.info("beep_boop.txt")$size)
write.table(beep,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
url <- "https://www.zomato.com/sk/bratislava/piv%C3%A1re%C5%88-u-hasi%C4%8Da-star%C3%A9-mesto-bratislava-i/denn%C3%A9-menu"
download.file(url, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
library(tidyverse)
library(rvest)
library(lubridate)
library(pander)
raw %>%
html_nodes("div.tmi-group:nth-child(1)") %>%
html_text()
raw %>%
html_nodes("div.tmi-group:nth-child(1)") %>%
html_children() %>%
html_text()
raw %>%
html_nodes("div.tmi-group:nth-child(1)")
jedlo <-
raw %>%
html_nodes(".tmi-groups") %>%
html_text()
raw %>% html_nodes(".tmi-groups")
raw %>%
html_nodes("#menu-preview") %>%
html_text()
jedlo <-
raw %>%
html_nodes(".restab_wrap") %>%
html_text()
raw
raw <- read_html("scrapedpage.html")
raw %>% html_text
raw %>% html_nodes()
jedlo <-
raw %>%
html_nodes("#mainframe") %>%
html_text()
raw
jedlo <-
raw %>%
html_nodes("html.webp.webp-alpha.webp-animation.webp-lossless body.sk.is-responsive div#mainframe.container div.wrapper.mtop div.row div.res-info-left.col-l-11 div.restab_wrap div#tabtop.tabcontent-wrapper.brstd.daily-menu div.ui.segment div#menu-container.relative div#daily-menu-container.supertab-data-container div#menu-preview.menu-preview.mt10 div.tmi-groups") %>%
html_text()
jedlo <-
raw %>%
html_nodes(".tmi-groups") %>%
html_text()
jedlo <-
raw %>%
html_nodes("div.tmi-group:nth-child(1) > div:nth-child(1)") %>%
html_text()
raw
View(raw)
str(raw)
jedlo <-
raw %>%
html_nodes("div.tmi-group") %>%
html_text()
raw %>%
html_nodes("#daily-menu-container")
?rvest
raw %>% html_children()
raw %>% html_children() %>% html_children
raw %>% html()
raw %>%
html_node("#daily-menu-container")
raw %>%
html_node("#mainframe")
raw %>%
html_nodes("#mainframe")
raw %>%
html_nodes('//*[@id="daily-menu-container"]')
url_veglife <- "http://www.veglife.sk/sk/"
download.file(url_veglife, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
raw %>%
html_nodes(".pcs-content")
url <- "https://www.zomato.com/sk/bratislava/piv%C3%A1re%C5%88-u-hasi%C4%8Da-star%C3%A9-mesto-bratislava-i/denn%C3%A9-menu"
download.file(url, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
raw %>%
html_nodes("tmi-group-name")
raw %>%
html_nodes("tmi-group mtop")
raw %>%
html_nodes("div.tmi-group:nth-child(1)")
raw %>%
html_nodes("div.tmi-daily")
raw %>%
html_nodes("tmi-daily")
raw %>%
html_nodes("tmi-groups")
raw %>%
html_nodes(".tmi-groups")
raw %>%
html_nodes(".tmi-groups")
raw %>% xml()
raw <- xml("url")
url <- "https://www.zomato.com/sk/bratislava/piv%C3%A1re%C5%88-u-hasi%C4%8Da-star%C3%A9-mesto-bratislava-i/denn%C3%A9-menu"
download.file(url, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_xml("scrapedpage.html")
url <- "https://www.zomato.com/sk/bratislava/piv%C3%A1re%C5%88-u-hasi%C4%8Da-star%C3%A9-mesto-bratislava-i/denn%C3%A9-menu"
download.file(url, destfile = "scrapedpage.html", quiet=TRUE)
url_veglife <- "http://www.veglife.sk/sk/"
download.file(url_veglife, destfile = "scrapedpage.html", quiet=TRUE)
url <- "https://www.zomato.com/sk/bratislava/piv%C3%A1re%C5%88-u-hasi%C4%8Da-star%C3%A9-mesto-bratislava-i/denn%C3%A9-menu"
raw <- read_xml(url)
raw <- xml(url)
raw <- read_xml(url)
raw <- read_xml("scrapedpage.html")
url_veglife <- "http://www.veglife.sk/sk/"
download.file(url_veglife, destfile = "scrapedpage.xml", quiet=TRUE)
raw <- read_xml("scrapedpage.xml")
?download.file
raw <- read_xml(url_veglife)
?download_xml
download_xml(url)
download_xml(url_veglife)
url
library(tidyverse)
library(rvest)
library(lubridate)
library(pander)
url <- "https://www.zomato.com/sk/bratislava/piv%C3%A1re%C5%88-u-hasi%C4%8Da-star%C3%A9-mesto-bratislava-i/denn%C3%A9-menu"
read_xml(url,file = "page.xml")
?read_xml
download_xml(url,file = "page.xml")
download.file(url)
download.file(url, destfile = "page")
