(menu[6,] <- mestiansky())
(menu[7,] <- mnamka())
(menu[8,] <- veda())
(menu[9,] <- veglife())
(menu[10,] <- realstar())
(menu2 <- lenka())
#menu <- na.omit(menu)
#remove special slovak characters
source("slovak_language_destroyer.R",encoding="utf-8")
menu <-
menu %>%
mutate_all(.fun = slovak_language_destroyer)
menu2 <-
menu2 %>%
mutate_all(.fun = slovak_language_destroyer)
#destroy the nuances in data
source("benson_string_destroyer.R")
menu <-
menu %>%
mutate_all(.fun = benson_string_destroyer)
menu
menu[10,] <- menu[10,] %>% str_replace("  l","") %>% str_replace("  g","") %>% str_trim()
menu <-
menu %>%
mutate_all(.fun = str_remove_1gl)
str_remove_1gl <- function(x) {
if(substr(x,1,1) == "g" | substr(x,1,1) == "l") substr(x, 1, 1) <- ""
x
}
menu <-
menu %>%
mutate_all(.fun = str_remove_1gl)
#randomize order
#menu <- menu[sample(1:nrow(menu),nrow(menu)),]
menu <-
menu %>%
mutate_all(.fun =  str_to_1up)
menu
substr(menu$polievka,1,1)
substr(menu$polievka,1,1) == "l"
substr(menu$polievka,1,1) == "H"
substr(menu$polievka,1,1) == "H" | substr(menu$polievka,1,1) == "S"
str_remove_1gl <- function(x) {
substr(x,1,1)[substr(x,1,1) == "l" | substr(x,1,1) == "g"] <- ""
x
}
menu <-
menu %>%
mutate_all(.fun = str_remove_1gl)
#randomize order
#menu <- menu[sample(1:nrow(menu),nrow(menu)),]
menu <-
menu %>%
mutate_all(.fun =  str_to_1up)
menu
menu2
#save the menu in a text file as an ascii table
menu_ascii <- pandoc.table.return(menu, style = "grid", split.tables = Inf, split.cells = 30)
menu_ascii
write.table(menu_ascii,file = "menu.txt", row.names = F, col.names = F, quote = F)
menu2_ascii <- pandoc.table.return(menu2, style = "grid", split.tables = Inf, split.cells = 30)
write.table(menu2_ascii,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
beep <- readChar("beep_boop.txt",file.info("beep_boop.txt")$size)
write.table(beep,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
menu <- menu %>% arrange(desc(podnik))
menu
menu <- menu %>% arrange(podnik)
menu2
#save the menu in a text file as an ascii table
menu_ascii <- pandoc.table.return(menu, style = "grid", split.tables = Inf, split.cells = 30)
menu_ascii
write.table(menu_ascii,file = "menu.txt", row.names = F, col.names = F, quote = F)
menu2_ascii <- pandoc.table.return(menu2, style = "grid", split.tables = Inf, split.cells = 30)
write.table(menu2_ascii,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
beep <- readChar("beep_boop.txt",file.info("beep_boop.txt")$size)
write.table(beep,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
library(tidyverse)
library(rvest)
library(lubridate)
library(pander)
#run web scraper
R.utils::sourceDirectory("Restaurants")
str_to_1up <- function(x) {
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
str_remove_1gl <- function(x) {
substr(x,1,1)[substr(x,1,1) == "l" | substr(x,1,1) == "g"] <- ""
x
}
menu <- tibble(podnik = character(), polievka = character(), jedlo_1 = character(), jedlo_2 = character(), jedlo_3 = character(), jedlo_4 = character())
(menu[1,] <- bioland())
(menu[2,] <- bluebear())
(menu[3,] <- ceska())
(menu[4,] <- dilema())
(menu[5,] <- kasa(sme = TRUE))
(menu[6,] <- mestiansky())
(menu[7,] <- mnamka())
(menu[8,] <- veda())
(menu[9,] <- veglife())
(menu[10,] <- realstar())
(menu2 <- lenka())
url_veda <- "https://restauracie.sme.sk/restauracia/veda-vegetarian-vegan_10202-stare-mesto_2949/denne-menu"
download.file(url_veda, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".dnesne_menu .jedlo_polozka .left") %>% html_text()
jedlo#
seq(9,16,by =2)
jedlo <- jedlo[c(4,seq(9,16,by = 2))] %>% str_trim()
jedlo
veda <- function(){
url_veda <- "https://restauracie.sme.sk/restauracia/veda-vegetarian-vegan_10202-stare-mesto_2949/denne-menu"
download.file(url_veda, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".dnesne_menu .jedlo_polozka .left") %>% html_text()
jedlo <- jedlo[c(4,seq(9,16,by = 2))] %>% str_trim()
jedlo <- jedlo %>% str_replace("VEGAN","") %>% str_replace("NOT","")
jedlo <- jedlo %>% str_sub(start =2) %>% str_trim()
jedlo <- jedlo %>% str_to_lower()
return(c("Veda",jedlo))
}
(menu[8,] <- veda())
#menu <- na.omit(menu)
#remove special slovak characters
source("slovak_language_destroyer.R",encoding="utf-8")
menu <-
menu %>%
mutate_all(.fun = slovak_language_destroyer)
menu2 <-
menu2 %>%
mutate_all(.fun = slovak_language_destroyer)
#destroy the nuances in data
source("benson_string_destroyer.R")
menu <-
menu %>%
mutate_all(.fun = benson_string_destroyer)
menu
menu[10,] <- menu[10,] %>% str_replace("  l","") %>% str_replace("  g","") %>% str_trim()
menu <-
menu %>%
mutate_all(.fun = str_remove_1gl)
#randomize order
#menu <- menu[sample(1:nrow(menu),nrow(menu)),]
menu <-
menu %>%
mutate_all(.fun =  str_to_1up)
menu <- menu %>% arrange(podnik)
menu2
#save the menu in a text file as an ascii table
menu_ascii <- pandoc.table.return(menu, style = "grid", split.tables = Inf, split.cells = 30)
menu_ascii
write.table(menu_ascii,file = "menu.txt", row.names = F, col.names = F, quote = F)
menu2_ascii <- pandoc.table.return(menu2, style = "grid", split.tables = Inf, split.cells = 30)
write.table(menu2_ascii,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
beep <- readChar("beep_boop.txt",file.info("beep_boop.txt")$size)
write.table(beep,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
library(Lori)
lori_pal()
?lori_pal
library(gridExtra)
g <- purrr::map(1:6,~plot_colours(lori_pal(.x)))
do.call("gridExtra::grid.arrange", c(g, nrow=1))
g <- purrr::map(1:6,~plot_colours(lori_pal(.x)))
g
library(gridExtra)
do.call("gridExtra::grid.arrange", c(g, nrow=1))
do.call(gridExtra::grid.arrange, c(g, nrow=1))
library(tidyverse)
library(rvest)
library(lubridate)
library(pander)
#run web scraper
R.utils::sourceDirectory("Restaurants")
str_to_1up <- function(x) {
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
str_remove_1gl <- function(x) {
substr(x,1,1)[substr(x,1,1) == "l" | substr(x,1,1) == "g"] <- ""
x
}
menu <- tibble(podnik = character(), polievka = character(), jedlo_1 = character(), jedlo_2 = character(), jedlo_3 = character(), jedlo_4 = character())
(menu[1,] <- bioland())
(menu[2,] <- bluebear())
(menu[2,] <- bluebear())
bluebear <- function(){
url_bluebear <- "http://blue-bear.sk/denne-menu-blue-bear/"
Sys.Date()
strftime(Sys.Date(), '%A')
download.file(url_bluebear, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".menux > div:nth-child(1)") %>%
html_children() %>%
html_text()
tyzden <- jedlo[length(jedlo) -2]
day_index <- c(1,8,15,23,30)
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday","Sunday")
today <- format(Sys.Date(), "%A")
today_i <- day_index[which(days_of_the_week %in% today)]
jedlo <- jedlo[(today_i+1):(today_i + 6)]
if(today_i == 15){
jedlo <- jedlo[-5]
} else jedlo <- jedlo[-6]
jedlo <- jedlo[-2]
jedlo[2:4] <-
jedlo[2:4] %>%
str_extract("g(.*)obsahuje") %>%
str_sub(start = 2, end = -9) %>%
str_trim()
jedlo[1] <-
jedlo[1] %>%
str_extract("ml(.*)obsahuje") %>%
str_sub(start = 3, end = -9) %>%
str_trim()
jedlo <- str_replace_all(jedlo, "([\n\t])", "")
return(c("BlueBear",jedlo,paste("Tyzdenne:",tyzden)))
}
(menu[2,] <- bluebear())
(menu[3,] <- ceska())
url_ceska <- "https://restauracie.sme.sk/restauracia/ceska-pivnica-2_7243-stare-mesto_2949/denne-menu"
download.file(url_ceska, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".dnesne_menu .jedlo_polozka .left") %>% html_text()
jedlo
jedlo <- jedlo[-1]
jedlo[1:2] <- jedlo[1:2] %>% str_sub(2) %>% str_trim() %>% str_sub(6)
jedlo[3:4] <- jedlo[3:4] %>% str_sub(4) %>% str_trim() %>% str_sub(8)
jedlo[5] <- jedlo[5] %>% str_sub(4) %>% str_trim() %>% str_sub(3)
jedlo[6] <- jedlo[6] %>% str_sub(3) %>% str_trim() %>% str_sub(3)
jedlo
(menu[3,] <- ceska())
ceska <- function(){
url_ceska <- "https://restauracie.sme.sk/restauracia/ceska-pivnica-2_7243-stare-mesto_2949/denne-menu"
download.file(url_ceska, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".dnesne_menu .jedlo_polozka .left") %>% html_text()
jedlo <- jedlo[-1]
jedlo[1:2] <- jedlo[1:2] %>% str_sub(2) %>% str_trim() %>% str_sub(6)
jedlo[3:4] <- jedlo[3:4] %>% str_sub(4) %>% str_trim() %>% str_sub(8)
jedlo[5] <- jedlo[5] %>% str_sub(4) %>% str_trim() %>% str_sub(3)
jedlo[6] <- jedlo[6] %>% str_sub(3) %>% str_trim() %>% str_sub(3)
return(c("Ceska pivn.",jedlo[-6]))
}
(menu[3,] <- ceska())
(menu[4,] <- dilema())
(menu[5,] <- kasa(sme = TRUE))
(menu[6,] <- mestiansky())
(menu[7,] <- mnamka())
(menu[8,] <- veda())
(menu[9,] <- veglife())
(menu[10,] <- realstar())
(menu2 <- lenka())
(menu[8,] <- veda())
(menu[8,] <- veda())
source("slovak_language_destroyer.R",encoding="utf-8")
menu <-
menu %>%
mutate_all(.fun = slovak_language_destroyer)
menu2 <-
menu2 %>%
mutate_all(.fun = slovak_language_destroyer)
#destroy the nuances in data
source("benson_string_destroyer.R")
menu <-
menu %>%
mutate_all(.fun = benson_string_destroyer)
menu
menu[10,] <- menu[10,] %>% str_replace("  l","") %>% str_replace("  g","") %>% str_trim()
menu <-
menu %>%
mutate_all(.fun = str_remove_1gl)
#randomize order
#menu <- menu[sample(1:nrow(menu),nrow(menu)),]
menu <-
menu %>%
mutate_all(.fun =  str_to_1up)
menu <- menu %>% arrange(podnik)
menu2
#save the menu in a text file as an ascii table
menu_ascii <- pandoc.table.return(menu, style = "grid", split.tables = Inf, split.cells = 30)
menu_ascii
write.table(menu_ascii,file = "menu.txt", row.names = F, col.names = F, quote = F)
menu2_ascii <- pandoc.table.return(menu2, style = "grid", split.tables = Inf, split.cells = 30)
write.table(menu2_ascii,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
beep <- readChar("beep_boop.txt",file.info("beep_boop.txt")$size)
write.table(beep,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
url_veda <- "https://restauracie.sme.sk/restauracia/bistro-suvlkai_7439-stare-mesto_2949/denne-menu"
download.file(url_veda, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".dnesne_menu .jedlo_polozka .left") %>% html_text()
library(tidyverse)
library(rvest)
library(lubridate)
library(pander)
url_suvlaki <- "https://restauracie.sme.sk/restauracia/bistro-suvlkai_7439-stare-mesto_2949/denne-menu"
download.file(url_suvlaki, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".dnesne_menu .jedlo_polozka .left") %>% html_text()
jedlo
jedlo <- jedlo[c(1,4,6,8,10)]
jedlo
jedlo %>% str_trim()
suvlaki <- function(){
url_suvlaki <- "https://restauracie.sme.sk/restauracia/bistro-suvlkai_7439-stare-mesto_2949/denne-menu"
download.file(url_suvlaki, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".dnesne_menu .jedlo_polozka .left") %>% html_text()
jedlo <- jedlo[c(1,4,6,8,10)]
jedlo <-
jedlo %>% str_trim()
return(c("Suvlaki",jedlo))
}
suvlaki()
library(tidyverse)
library(rvest)
library(lubridate)
library(pander)
#run web scraper
R.utils::sourceDirectory("Restaurants")
str_to_1up <- function(x) {
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
str_remove_1gl <- function(x) {
substr(x,1,1)[substr(x,1,1) == "l" | substr(x,1,1) == "g"] <- ""
x
}
menu <- tibble(podnik = character(), polievka = character(), jedlo_1 = character(), jedlo_2 = character(), jedlo_3 = character(), jedlo_4 = character())
(menu[1,] <- bioland())
(menu[2,] <- bluebear())
url_bluebear <- "http://blue-bear.sk/denne-menu-blue-bear/"
Sys.Date()
strftime(Sys.Date(), '%A')
download.file(url_bluebear, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".menux > div:nth-child(1)") %>%
html_children() %>%
html_text()
tyzden <- jedlo[length(jedlo) -2]
jedlo
day_index <- c(1,7,13,19,25)
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday","Sunday")
today <- format(Sys.Date(), "%A")
today_i <- day_index[which(days_of_the_week %in% today)]
jedlo <- jedlo[(today_i+1):(today_i + 6)]
jedlo
if(today_i == 15){
jedlo <- jedlo[-5]
} else jedlo <- jedlo[-6]
jedlo <- jedlo[-2]
jedlo[2:4] <-
jedlo[2:4] %>%
str_extract("g(.*)obsahuje") %>%
str_sub(start = 2, end = -9) %>%
str_trim()
jedlo[1] <-
jedlo[1] %>%
str_extract("ml(.*)obsahuje") %>%
str_sub(start = 3, end = -9) %>%
str_trim()
jedlo <- str_replace_all(jedlo, "([\n\t])", "")
jedlo
c("BlueBear",jedlo,paste("Tyzdenne:",tyzden))
bluebear <- function(){
url_bluebear <- "http://blue-bear.sk/denne-menu-blue-bear/"
Sys.Date()
strftime(Sys.Date(), '%A')
download.file(url_bluebear, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".menux > div:nth-child(1)") %>%
html_children() %>%
html_text()
tyzden <- jedlo[length(jedlo) -2]
day_index <- c(1,7,13,19,25)
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday","Sunday")
today <- format(Sys.Date(), "%A")
today_i <- day_index[which(days_of_the_week %in% today)]
jedlo <- jedlo[(today_i+1):(today_i + 6)]
if(today_i == 15){
jedlo <- jedlo[-5]
} else jedlo <- jedlo[-6]
jedlo <- jedlo[-2]
jedlo[2:4] <-
jedlo[2:4] %>%
str_extract("g(.*)obsahuje") %>%
str_sub(start = 2, end = -9) %>%
str_trim()
jedlo[1] <-
jedlo[1] %>%
str_extract("ml(.*)obsahuje") %>%
str_sub(start = 3, end = -9) %>%
str_trim()
jedlo <- str_replace_all(jedlo, "([\n\t])", "")
return(c("BlueBear",jedlo,paste("Tyzdenne:",tyzden)))
}
(menu[2,] <- bluebear())
(menu[3,] <- ceska())
(menu[4,] <- dilema())
(menu[5,] <- kasa(sme = TRUE))
ceska <- function(){
url_ceska <- "https://restauracie.sme.sk/restauracia/ceska-pivnica-2_7243-stare-mesto_2949/denne-menu"
download.file(url_ceska, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".dnesne_menu .jedlo_polozka .left") %>% html_text()
jedlo <- jedlo[-1]
jedlo[1:2] <- jedlo[1:2] %>% str_sub(2) %>% str_trim() %>% str_sub(6)
jedlo[3:4] <- jedlo[3:4] %>% str_sub(4) %>% str_trim() %>% str_sub(8)
jedlo[5] <- jedlo[5] %>% str_sub(4) %>% str_trim() %>% str_sub(3)
jedlo[6] <- jedlo[6] %>% str_sub(3) %>% str_trim() %>% str_sub(3)
jedlo <- str_trim(jedlo)
return(c("Ceska pivn.",jedlo[-6]))
}
(menu[3,] <- ceska())
(menu[6,] <- mestiansky())
url_mestiansky <- "https://restauracie.sme.sk/restauracia/bratislavsky-mestiansky-pivovar-drevena_3951-stare-mesto_2949/denne-menu"
download.file(url_mestiansky, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".dnesne_menu .jedlo_polozka .left") %>%
html_text()
jedlo <- str_trim(jedlo)
#jedlo <- jedlo[c(2,4,5)]
# jedlo[1] <-
#   jedlo[1] %>%
#   str_extract("3l(.*)") %>%
#   str_sub(start = 3) %>%
#   str_trim()
# jedlo[2:3] <-
#   jedlo[2:3] %>%
#   str_extract("g(.*)") %>%
#   str_sub(start = 3) %>%
#   str_trim()
jedlo <- str_replace_all(jedlo, "([\n\t])", "")
jedlo <- str_replace_all(jedlo,"polievka","")
jedlo
mestiansky <- function(){
url_mestiansky <- "https://restauracie.sme.sk/restauracia/bratislavsky-mestiansky-pivovar-drevena_3951-stare-mesto_2949/denne-menu"
download.file(url_mestiansky, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".dnesne_menu .jedlo_polozka .left") %>%
html_text()
jedlo <- str_trim(jedlo)
#jedlo <- jedlo[c(2,4,5)]
# jedlo[1] <-
#   jedlo[1] %>%
#   str_extract("3l(.*)") %>%
#   str_sub(start = 3) %>%
#   str_trim()
# jedlo[2:3] <-
#   jedlo[2:3] %>%
#   str_extract("g(.*)") %>%
#   str_sub(start = 3) %>%
#   str_trim()
jedlo <- str_replace_all(jedlo, "([\n\t])", "")
jedlo <- str_replace_all(jedlo,"polievka","")
if(length(jedlo) >= 4) jedlo <- jedlo[-3]
return(c("Mestiansky piv.",jedlo,"",""))
}
(menu[6,] <- mestiansky())
(menu[7,] <- mnamka())
(menu[8,] <- veda())
(menu[9,] <- veglife())
(menu[10,] <- realstar())
(menu[11,] <- suvlaki())
(menu[11,] <- suvlaki())
(menu2 <- lenka())
#menu <- na.omit(menu)
#remove special slovak characters
source("slovak_language_destroyer.R",encoding="utf-8")
menu <-
menu %>%
mutate_all(.fun = slovak_language_destroyer)
menu2 <-
menu2 %>%
mutate_all(.fun = slovak_language_destroyer)
#destroy the nuances in data
source("benson_string_destroyer.R")
menu <-
menu %>%
mutate_all(.fun = benson_string_destroyer)
menu
menu[10,] <- menu[10,] %>% str_replace("  l","") %>% str_replace("  g","") %>% str_trim()
menu <-
menu %>%
mutate_all(.fun = str_remove_1gl)
#randomize order
#menu <- menu[sample(1:nrow(menu),nrow(menu)),]
menu <-
menu %>%
mutate_all(.fun =  str_to_1up)
menu <- menu %>% arrange(podnik)
menu2
#save the menu in a text file as an ascii table
menu_ascii <- pandoc.table.return(menu, style = "grid", split.tables = Inf, split.cells = 30)
menu_ascii
write.table(menu_ascii,file = "menu.txt", row.names = F, col.names = F, quote = F)
menu2_ascii <- pandoc.table.return(menu2, style = "grid", split.tables = Inf, split.cells = 30)
write.table(menu2_ascii,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
beep <- readChar("beep_boop.txt",file.info("beep_boop.txt")$size)
write.table(beep,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
