jedlo <- jedlo[-1]
jedlo
str_trim(jedlo)
ceska <- function(){
url_ceska <- "https://restauracie.sme.sk/restauracia/ceska-pivnica-2_7243-stare-mesto_2949/denne-menu"
download.file(url_ceska, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".dnesne_menu .jedlo_polozka .left") %>% html_text()
jedlo <- jedlo[-1]
jedlo <- str_trim(jedlo)
# jedlo[1:4] <- jedlo[1:2] %>% str_sub(2) %>% str_trim() %>% str_sub(8)
# jedlo[5] <- jedlo[5] %>% str_sub(4) %>% str_trim() %>% str_sub(5)
# jedlo[6] <- jedlo[6] %>% str_sub(3) %>% str_trim() %>% str_sub(4)
return(c("Ceska pivn.",jedlo))
}
(menu[3,] <- ceska())
ceska <- function(){
url_ceska <- "https://restauracie.sme.sk/restauracia/ceska-pivnica-2_7243-stare-mesto_2949/denne-menu"
download.file(url_ceska, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".dnesne_menu .jedlo_polozka .left") %>% html_text()
jedlo <- jedlo[-1]
jedlo <- str_trim(jedlo)
# jedlo[1:4] <- jedlo[1:2] %>% str_sub(2) %>% str_trim() %>% str_sub(8)
# jedlo[5] <- jedlo[5] %>% str_sub(4) %>% str_trim() %>% str_sub(5)
# jedlo[6] <- jedlo[6] %>% str_sub(3) %>% str_trim() %>% str_sub(4)
return(c("Ceska pivn.",jedlo,NA))
}
[
(menu[3,] <- ceska())
#menu <- na.omit(menu)
#remove special slovak characters
source("slovak_language_destroyer.R",encoding="utf-8")
menu <-
menu %>%
mutate_all(.fun = slovak_language_destroyer)
menu2 <-
menu2 %>%
mutate_all(.fun = slovak_language_destroyer)
#destroy the nuances in data
source("benson_string_destroyer.R")
menu <-
menu %>%
mutate_all(.fun = benson_string_destroyer)
menu2 <-
menu2 %>%
mutate_all(.fun = benson_string_destroyer)
menu
remove_g_l <- function(x){
x <-
x %>%
str_replace_all("  l","") %>%
str_replace_all("  g","") %>%
str_replace_all(" g ","") %>%
str_replace_all("g ","") %>%
str_replace_all(" l ","") %>%
str_trim()
return(x)
}
menu <-
menu %>% mutate_all(.fun = remove_g_l)
menu <-
menu %>%
mutate_all(.fun = str_remove_1gl)
#randomize order
#menu <- menu[sample(1:nrow(menu),nrow(menu)),]
menu <-
menu %>%
mutate_all(.fun =  str_to_1up)
menu <- menu %>% arrange(podnik)
menu2
#save the menu in a text file as an ascii table
menu_ascii <- pandoc.table.return(menu, style = "grid", split.tables = Inf, split.cells = 30)
menu_ascii
write.table(menu_ascii,file = "menu.txt", row.names = F, col.names = F, quote = F)
menu2_ascii <- pandoc.table.return(menu2, style = "grid", split.tables = Inf, split.cells = 30)
write.table(menu2_ascii,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
beep <- readChar("beep_boop.txt",file.info("beep_boop.txt")$size)
write.table(beep,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
library(tidyverse)
library(rvest)
library(lubridate)
library(pander)
#run web scraper
R.utils::sourceDirectory("Restaurants")
str_to_1up <- function(x) {
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
str_remove_1gl <- function(x) {
substr(x,1,1)[substr(x,1,1) == "l" | substr(x,1,1) == "g"] <- ""
x
}
menu <- tibble(podnik = character(), polievka = character(), jedlo_1 = character(), jedlo_2 = character(), jedlo_3 = character(), jedlo_4 = character())
(menu[1,] <- bioland())
(menu[2,] <- bluebear())
url_bluebear <- "http://blue-bear.sk/denne-menu-blue-bear/"
Sys.Date()
strftime(Sys.Date(), '%A')
download.file(url_bluebear, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".menux > div:nth-child(1)") %>%
html_children() %>%
html_text()
jedlo <- str_trim(jedlo)
jedlo
jedlo <- jedlo[str_length(jedlo) >0]
jedlo
tyzden <- jedlo[length(jedlo) -1]
day_index <- c(1,7,13,20,26)
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday","Sunday")
today <- format(Sys.Date(), "%A")
today_i <- day_index[which(days_of_the_week %in% today)]
jedlo <- jedlo[(today_i+1):(today_i + 6)]
if(today_i == 15){
jedlo <- jedlo[-5]
} else jedlo <- jedlo[-6]
jedlo <- jedlo[-2]
jedlo[2:4] <-
jedlo[2:4] %>%
str_extract("g(.*)obsahuje") %>%
str_sub(start = 2, end = -9) %>%
str_trim()
jedlo[1] <-
jedlo[1] %>%
str_extract("ml(.*)obsahuje") %>%
str_sub(start = 3, end = -9) %>%
str_trim()
jedlo <- str_replace_all(jedlo, "([\n\t])", "")
jedlo
jedlo <- raw %>%
html_nodes(".menux > div:nth-child(1)") %>%
html_children() %>%
html_text()
jedlo <- str_trim(jedlo)
jedlo <- jedlo[str_length(jedlo) >0]
tyzden <- jedlo[length(jedlo) -1]
day_index <- c(1,7,13,20,26)
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday","Sunday")
today <- format(Sys.Date(), "%A")
today_i <- day_index[which(days_of_the_week %in% today)]
jedlo <- jedlo[(today_i+1):(today_i + 6)]
jedlo
jedlo <- jedlo[-2]
jedlo
jedlo[2:4] <-
jedlo[2:4] %>%
str_extract("g(.*)obsahuje") %>%
str_sub(start = 2, end = -9) %>%
str_trim()
jedlo
jedlo[1] <-
jedlo[1] %>%
str_extract("ml(.*)obsahuje") %>%
str_sub(start = 3, end = -9) %>%
str_trim()
jedlo
jedlo %>% na.omit
na.omit(jedlo)
jedlo[!is.na(jedlo)]
bluebear <- function(){
url_bluebear <- "http://blue-bear.sk/denne-menu-blue-bear/"
Sys.Date()
strftime(Sys.Date(), '%A')
download.file(url_bluebear, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".menux > div:nth-child(1)") %>%
html_children() %>%
html_text()
jedlo <- str_trim(jedlo)
jedlo <- jedlo[str_length(jedlo) >0]
tyzden <- jedlo[length(jedlo) -1]
day_index <- c(1,7,13,20,26)
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday","Sunday")
today <- format(Sys.Date(), "%A")
today_i <- day_index[which(days_of_the_week %in% today)]
jedlo <- jedlo[(today_i+1):(today_i + 6)]
if(today_i == 15){
jedlo <- jedlo[-5]
} else jedlo <- jedlo[-6]
jedlo <- jedlo[-2]
jedlo[2:4] <-
jedlo[2:4] %>%
str_extract("g(.*)obsahuje") %>%
str_sub(start = 2, end = -9) %>%
str_trim()
jedlo[1] <-
jedlo[1] %>%
str_extract("ml(.*)obsahuje") %>%
str_sub(start = 3, end = -9) %>%
str_trim()
jedlo <- str_replace_all(jedlo, "([\n\t])", "")
return(c("BlueBear",jedlo[!is.na(jedlo)],paste("TYZDENNE",tyzden)))
}
(menu[2,] <- bluebear())
bluebear
bluebear <- function(){
url_bluebear <- "http://blue-bear.sk/denne-menu-blue-bear/"
Sys.Date()
strftime(Sys.Date(), '%A')
download.file(url_bluebear, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".menux > div:nth-child(1)") %>%
html_children() %>%
html_text()
jedlo <- str_trim(jedlo)
jedlo <- jedlo[str_length(jedlo) >0]
tyzden <- jedlo[length(jedlo) -1]
day_index <- c(1,7,13,20,26)
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday","Sunday")
today <- format(Sys.Date(), "%A")
today_i <- day_index[which(days_of_the_week %in% today)]
jedlo <- jedlo[(today_i+1):(today_i + 6)]
if(today_i == 15){
jedlo <- jedlo[-5]
} else jedlo <- jedlo[-6]
jedlo <- jedlo[-2]
jedlo[2:4] <-
jedlo[2:4] %>%
str_extract("g(.*)obsahuje") %>%
str_sub(start = 2, end = -9) %>%
str_trim()
jedlo[1] <-
jedlo[1] %>%
str_extract("ml(.*)obsahuje") %>%
str_sub(start = 3, end = -9) %>%
str_trim()
jedlo <- str_replace_all(jedlo, "([\n\t])", "")
return(c("BlueBear",jedlo[!is.na(jedlo)],,paste("TYZDENNE",tyzden)))
}
(menu[2,] <- bluebear())
url_bluebear <- "http://blue-bear.sk/denne-menu-blue-bear/"
Sys.Date()
strftime(Sys.Date(), '%A')
download.file(url_bluebear, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".menux > div:nth-child(1)") %>%
html_children() %>%
html_text()
jedlo <- str_trim(jedlo)
jedlo <- jedlo[str_length(jedlo) >0]
tyzden <- jedlo[length(jedlo) -1]
day_index <- c(1,7,13,20,26)
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday","Sunday")
today <- format(Sys.Date(), "%A")
today_i <- day_index[which(days_of_the_week %in% today)]
jedlo <- jedlo[(today_i+1):(today_i + 6)]
if(today_i == 15){
jedlo <- jedlo[-5]
} else jedlo <- jedlo[-6]
jedlo <- jedlo[-2]
jedlo[2:4] <-
jedlo[2:4] %>%
str_extract("g(.*)obsahuje") %>%
str_sub(start = 2, end = -9) %>%
str_trim()
jedlo[1] <-
jedlo[1] %>%
str_extract("ml(.*)obsahuje") %>%
str_sub(start = 3, end = -9) %>%
str_trim()
jedlo <- str_replace_all(jedlo, "([\n\t])", "")
c("BlueBear",jedlo[!is.na(jedlo)],,paste("TYZDENNE",tyzden))
c("BlueBear",jedlo[!is.na(jedlo)],"",paste("TYZDENNE",tyzden))
url_bluebear <- "http://blue-bear.sk/denne-menu-blue-bear/"
Sys.Date()
strftime(Sys.Date(), '%A')
download.file(url_bluebear, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".menux > div:nth-child(1)") %>%
html_children() %>%
html_text()
jedlo <- str_trim(jedlo)
jedlo <- jedlo[str_length(jedlo) >0]
tyzden <- jedlo[length(jedlo) -1]
day_index <- c(1,7,13,20,26)
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday","Sunday")
today <- format(Sys.Date(), "%A")
today_i <- day_index[which(days_of_the_week %in% today)]
jedlo <- jedlo[(today_i+1):(today_i + 6)]
if(today_i == 15){
jedlo <- jedlo[-5]
} else jedlo <- jedlo[-6]
jedlo <- jedlo[-2]
jedlo[2:4] <-
jedlo[2:4] %>%
str_extract("g(.*)obsahuje") %>%
str_sub(start = 2, end = -9) %>%
str_trim()
jedlo[1] <-
jedlo[1] %>%
str_extract("ml(.*)obsahuje") %>%
str_sub(start = 3, end = -9) %>%
str_trim()
jedlo <- str_replace_all(jedlo, "([\n\t])", "")
jedlo <- str_replace_all(jedlo, NA, "")
jedlo
bluebear <- function(){
url_bluebear <- "http://blue-bear.sk/denne-menu-blue-bear/"
Sys.Date()
strftime(Sys.Date(), '%A')
download.file(url_bluebear, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".menux > div:nth-child(1)") %>%
html_children() %>%
html_text()
jedlo <- str_trim(jedlo)
jedlo <- jedlo[str_length(jedlo) >0]
tyzden <- jedlo[length(jedlo) -1]
day_index <- c(1,7,13,20,26)
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday","Sunday")
today <- format(Sys.Date(), "%A")
today_i <- day_index[which(days_of_the_week %in% today)]
jedlo <- jedlo[(today_i+1):(today_i + 6)]
if(today_i == 15){
jedlo <- jedlo[-5]
} else jedlo <- jedlo[-6]
jedlo <- jedlo[-2]
jedlo[2:4] <-
jedlo[2:4] %>%
str_extract("g(.*)obsahuje") %>%
str_sub(start = 2, end = -9) %>%
str_trim()
jedlo[1] <-
jedlo[1] %>%
str_extract("ml(.*)obsahuje") %>%
str_sub(start = 3, end = -9) %>%
str_trim()
jedlo <- str_replace_all(jedlo, "([\n\t])", "")
jedlo[is.na(jedlo)] <- ""
return(c("BlueBear",jedlo,paste("TYZDENNE",tyzden)))
}
(menu[2,] <- bluebear())
(menu[3,] <- ceska())
(menu[4,] <- dilema())
(menu[5,] <- kasa(sme = TRUE))
(menu[6,] <- mestiansky())
(menu[7,] <- mnamka())
(menu[8,] <- veda())
(menu[9,] <- veglife())
(menu[10,] <- realstar())
(menu[11,] <- suvlaki())
(menu2 <- lenka())
(menu[11,] <- suvlaki())
(menu[11,] <- suvlaki())
source("slovak_language_destroyer.R",encoding="utf-8")
menu <-
menu %>%
mutate_all(.fun = slovak_language_destroyer)
menu2 <-
menu2 %>%
mutate_all(.fun = slovak_language_destroyer)
#destroy the nuances in data
source("benson_string_destroyer.R")
menu <-
menu %>%
mutate_all(.fun = benson_string_destroyer)
menu2 <-
menu2 %>%
mutate_all(.fun = benson_string_destroyer)
menu
remove_g_l <- function(x){
x <-
x %>%
str_replace_all("  l","") %>%
str_replace_all("  g","") %>%
str_replace_all(" g ","") %>%
str_replace_all("g ","") %>%
str_replace_all(" l ","") %>%
str_trim()
return(x)
}
menu <-
menu %>% mutate_all(.fun = remove_g_l)
menu <-
menu %>%
mutate_all(.fun = str_remove_1gl)
#randomize order
#menu <- menu[sample(1:nrow(menu),nrow(menu)),]
menu <-
menu %>%
mutate_all(.fun =  str_to_1up)
menu <- menu %>% arrange(podnik)
menu2
#save the menu in a text file as an ascii table
menu_ascii <- pandoc.table.return(menu, style = "grid", split.tables = Inf, split.cells = 30)
menu_ascii
write.table(menu_ascii,file = "menu.txt", row.names = F, col.names = F, quote = F)
menu2_ascii <- pandoc.table.return(menu2, style = "grid", split.tables = Inf, split.cells = 30)
write.table(menu2_ascii,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
beep <- readChar("beep_boop.txt",file.info("beep_boop.txt")$size)
write.table(beep,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
library(tidyverse)
library(rvest)
library(lubridate)
library(pander)
#run web scraper
R.utils::sourceDirectory("Restaurants")
str_to_1up <- function(x) {
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
str_remove_1gl <- function(x) {
substr(x,1,1)[substr(x,1,1) == "l" | substr(x,1,1) == "g"] <- ""
x
}
menu <- tibble(podnik = character(), polievka = character(), jedlo_1 = character(), jedlo_2 = character(), jedlo_3 = character(), jedlo_4 = character())
(menu[1,] <- bioland())
(menu[2,] <- bluebear())
(menu[3,] <- ceska())
(menu[4,] <- dilema())
(menu[5,] <- kasa(sme = TRUE))
(menu[6,] <- mestiansky())
(menu[7,] <- mnamka())
(menu[8,] <- veda())
(menu[9,] <- veglife())
(menu[10,] <- realstar())
(menu[11,] <- suvlaki())
(menu2 <- lenka())
url_bioland <- "https://www.bioland.sk/restauracia-bratislava/"
download.file(url_bioland, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".td_content_body") %>%
html_children() %>%
html_children() %>%
html_text()
jedlo <- jedlo[12:41]
jedlo <- jedlo[str_length(jedlo) >0]
jedlo
jedlo <- raw %>%
html_nodes(".td_content_body") %>%
html_children() %>%
html_text()
jedlo <- jedlo[12:41]
jedlo <- jedlo[str_length(jedlo) >0]
jedlo
jedlo <- raw %>%
html_nodes(".td_content_body") %>%
html_children() %>%
html_children() %>%
html_text()
jedlo <- jedlo[12:41]
jedlo <- jedlo[str_length(jedlo) >0]
jedlo
jedlo <- raw %>%
html_nodes(".td_content_body") %>%
html_children() %>%
html_children() %>%
html_text()
jedlo
jedlo <- jedlo[12:41]
jedlo <- jedlo[str_length(jedlo) >0]
jedlo
jedlo[13:16]
menu[1,] <- c("Bioland",jedlo[13:16],"")
menu
source("slovak_language_destroyer.R",encoding="utf-8")
menu <-
menu %>%
mutate_all(.fun = slovak_language_destroyer)
menu2 <-
menu2 %>%
mutate_all(.fun = slovak_language_destroyer)
#destroy the nuances in data
source("benson_string_destroyer.R")
menu <-
menu %>%
mutate_all(.fun = benson_string_destroyer)
menu2 <-
menu2 %>%
mutate_all(.fun = benson_string_destroyer)
menu
remove_g_l <- function(x){
x <-
x %>%
str_replace_all("  l","") %>%
str_replace_all("  g","") %>%
str_replace_all(" g ","") %>%
str_replace_all("g ","") %>%
str_replace_all(" l ","") %>%
str_trim()
return(x)
}
menu <-
menu %>% mutate_all(.fun = remove_g_l)
menu <-
menu %>%
mutate_all(.fun = str_remove_1gl)
#randomize order
#menu <- menu[sample(1:nrow(menu),nrow(menu)),]
menu <-
menu %>%
mutate_all(.fun =  str_to_1up)
menu <- menu %>% arrange(podnik)
menu2
#save the menu in a text file as an ascii table
menu_ascii <- pandoc.table.return(menu, style = "grid", split.tables = Inf, split.cells = 30)
menu_ascii
write.table(menu_ascii,file = "menu.txt", row.names = F, col.names = F, quote = F)
menu2_ascii <- pandoc.table.return(menu2, style = "grid", split.tables = Inf, split.cells = 30)
write.table(menu2_ascii,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
beep <- readChar("beep_boop.txt",file.info("beep_boop.txt")$size)
write.table(beep,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
