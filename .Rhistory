jedlo <-
raw %>%
html_nodes(".tmi-groups") %>%
html_children() %>%
html_children() %>%
html_text() %>%
str_trim()
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday","Sunday")
dni <- c("Pondelok", "Utorok", "Streda", "Stvrtok", "Piatok", "Sobota", "Nedela")
today <- format(Sys.Date(), "%A")
source("slovak_language_destroyer.R",encoding="utf-8")
source("benson_string_destroyer.R")
jedlo <- slovak_language_destroyer(jedlo)
match_day <- paste0(dni[which(today == days_of_the_week)],
", ",
unlist(str_split(format(Sys.Date(), "%D"),"/"))[2])
dnes <- which(str_detect(jedlo,match_day))
jedlo <- jedlo[(dnes+1):(dnes+4)]
jedlo <- benson_string_destroyer(jedlo)
jedlo <- c(str_sub(jedlo[1],3),str_sub(jedlo[2:4],5))
c("U Hasica",jedlo,"")
}
hasic()
(menu[1,] <- bioland())
(menu[2,] <- bluebear())
(menu[3,] <- ceska())
(menu[4,] <- dilema())
(menu[5,] <- kasa(sme = TRUE))
(menu[6,] <- mestiansky())
(menu[7,] <- mnamka())
(menu[8,] <- veda())
(menu[9,] <- veglife())
(menu[10,] <- realstar())
(menu[11,] <- suvlaki())
(menu[12,] <- lenka())
(menu[13,] <- svadbykari())
(menu[14,] <- redcafe())
(menu[15,] <- hasic())
(menu[13,] <- svadbykari())
(menu[4,] <- dilema())
(menu[13,] <- svadbykari())
(menu[4,] <- dilema())
menu[13,] <- c("Svadby a Kari","Brokolicový krém s opekanými mandľami","Indické paradajkovo-paprikové VEGAN kari s pečeným baklažánom a pórom","Jamajské kuracie kari s tymianom, mrkvou a zemiakmi, kiwi-jablkový šalát s chilli","","")
menu[11,2:6] <- c("RYBACIA polievka","Grilované jahňacie karbonátky","Dusené bravčové mäso s cícerom","Pečené morčacie kabonátky, paradajková omáčka","Špenátová omeleta")
#remove special slovak characters
source("slovak_language_destroyer.R",encoding="utf-8")
menu <-
menu %>%
mutate_all(.fun = slovak_language_destroyer)
# menu2 <-
#   menu2 %>%
#   mutate_all(.fun = slovak_language_destroyer)
#destroy the nuances in data
source("benson_string_destroyer.R")
menu <-
menu %>%
mutate_all(.fun = benson_string_destroyer)
# menu2 <-
#   menu2 %>%
#   mutate_all(.fun = benson_string_destroyer)
menu
remove_g_l <- function(x){
x <-
x %>%
str_replace_all("  l","") %>%
str_replace_all("  g","") %>%
str_replace_all(" g ","") %>%
str_replace_all(" l ","") %>%
str_replace_all("NA","") %>%
str_trim()
y <-
x %>%
str_sub(end = 2) %>%
str_remove_all("g ") %>%
str_remove_all("l ")
x <- paste0(y,str_sub(x,3))
return(x)
}
menu <-
menu %>% mutate_all(.fun = remove_g_l)
menu <-
menu %>%
mutate_all(.fun = str_remove_1gl)
#randomize order
#menu <- menu[sample(1:nrow(menu),nrow(menu)),]
menu <-
menu %>%
mutate_all(.fun =  str_to_1up)
menu <- menu %>% arrange(podnik)
# menu2
#save the menu in a text file as an ascii table
menu_ascii <- pandoc.table.return(menu, style = "grid", split.tables = Inf, split.cells = 30) %>% str_sub(3) # the last thing removes the first 2 /n
menu_ascii
write.table(menu_ascii,file = "menu.txt", row.names = F, col.names = F, quote = F)
# menu2_ascii <- pandoc.table.return(menu2, style = "grid", split.tables = Inf, split.cells = 30)
# write.table(menu2_ascii,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
beep <- readChar("beep_boop.txt",file.info("beep_boop.txt")$size)
write.table(beep,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
tabulecka <- tibble(Podnik = c("Bioland", "Ceska pivnica", "Dilema", "Kasa", "Mestiansky pivovar",
"Bistro Mnamka", "Veda", "Suvlaki", "Jedla lenka", "Svadby a kari", "Red Cafe", "U Hasica"),
Ulica = c("Mytna 23", "Radlinskeho 39","Sancova 70","Radlinskeho 11",
"Drevena 8","Vazovova 9", "Zilinska 2","Krizna 8","Cajkovskeho 14", "Americka 2",
"Racianske myto 1/A","Wilsonova 1"), TR_karta = T)
tabulecka[8,3] <- F
tabulecka[12,3] <- F
tabulecka <- pandoc.table.return(tabulecka, style = "grid", split.tables = Inf, split.cells = 30) %>% str_sub(3)
write.table(tabulecka,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
install.packages(c("dbplyr", "ggplot2", "R.utils", "StanHeaders", "tidytext"))
library(tidyverse)
library(rvest)
library(lubridate)
library(pander)
#run web scraper
R.utils::sourceDirectory("Restaurants",encoding = "UTF-8")
#lapply(list.files("Restaurants"),function(x) source(paste0("Restaurants/",x)))
str_to_1up <- function(x) {
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
str_remove_1gl <- function(x) {
substr(x,1,1)[substr(x,1,1) == "l" | substr(x,1,1) == "g"] <- ""
x
}
menu <- tibble(podnik = character(), polievka = character(), jedlo_1 = character(), jedlo_2 = character(), jedlo_3 = character(), jedlo_4 = character())
(menu[1,] <- bioland())
(menu[2,] <- bluebear())
(menu[3,] <- ceska())
(menu[4,] <- dilema())
(menu[5,] <- kasa(sme = TRUE))
(menu[6,] <- mestiansky())
(menu[7,] <- mnamka())
(menu[8,] <- veda())
(menu[9,] <- veglife())
(menu[10,] <- realstar())
(menu[11,] <- suvlaki())
(menu[12,] <- lenka())
(menu[13,] <- svadbykari())
(menu[14,] <- redcafe())
(menu[15,] <- hasic())
(menu[11,] <- suvlaki())
menu[13,2:4] <- c("Zeleninová polievka so šampiňónmi","Indické Aloo Gobi s karfiolom, hráškom a zemiakmi, chilli-paradajkové čatní","Thajské žlté kari s hovädzím mäsom, farebnými paprikami, cuketou a batátmi, ľadový šalát s limetkovým dressingom")
menu
#menu <- na.omit(menu)
#remove special slovak characters
source("slovak_language_destroyer.R",encoding="utf-8")
menu <-
menu %>%
mutate_all(.fun = slovak_language_destroyer)
# menu2 <-
#   menu2 %>%
#   mutate_all(.fun = slovak_language_destroyer)
#destroy the nuances in data
source("benson_string_destroyer.R")
menu <-
menu %>%
mutate_all(.fun = benson_string_destroyer)
# menu2 <-
#   menu2 %>%
#   mutate_all(.fun = benson_string_destroyer)
menu
remove_g_l <- function(x){
x <-
x %>%
str_replace_all("  l","") %>%
str_replace_all("  g","") %>%
str_replace_all(" g ","") %>%
str_replace_all(" l ","") %>%
str_replace_all("NA","") %>%
str_trim()
y <-
x %>%
str_sub(end = 2) %>%
str_remove_all("g ") %>%
str_remove_all("l ")
x <- paste0(y,str_sub(x,3))
return(x)
}
menu <-
menu %>% mutate_all(.fun = remove_g_l)
menu <-
menu %>%
mutate_all(.fun = str_remove_1gl)
#randomize order
#menu <- menu[sample(1:nrow(menu),nrow(menu)),]
menu <-
menu %>%
mutate_all(.fun =  str_to_1up)
menu <- menu %>% arrange(podnik)
# menu2
#save the menu in a text file as an ascii table
menu_ascii <- pandoc.table.return(menu, style = "grid", split.tables = Inf, split.cells = 30) %>% str_sub(3) # the last thing removes the first 2 /n
menu_ascii
write.table(menu_ascii,file = "menu.txt", row.names = F, col.names = F, quote = F)
# menu2_ascii <- pandoc.table.return(menu2, style = "grid", split.tables = Inf, split.cells = 30)
# write.table(menu2_ascii,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
beep <- readChar("beep_boop.txt",file.info("beep_boop.txt")$size)
write.table(beep,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
tabulecka <- tibble(Podnik = c("Bioland", "Ceska pivnica", "Dilema", "Kasa", "Mestiansky pivovar",
"Bistro Mnamka", "Veda", "Suvlaki", "Jedla lenka", "Svadby a kari", "Red Cafe", "U Hasica"),
Ulica = c("Mytna 23", "Radlinskeho 39","Sancova 70","Radlinskeho 11",
"Drevena 8","Vazovova 9", "Zilinska 2","Krizna 8","Cajkovskeho 14", "Americka 2",
"Racianske myto 1/A","Wilsonova 1"), TR_karta = T)
tabulecka[8,3] <- F
tabulecka[12,3] <- F
tabulecka <- pandoc.table.return(tabulecka, style = "grid", split.tables = Inf, split.cells = 30) %>% str_sub(3)
write.table(tabulecka,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
library(tidyverse)
library(rvest)
library(lubridate)
library(pander)
#run web scraper
R.utils::sourceDirectory("Restaurants",encoding = "UTF-8")
#lapply(list.files("Restaurants"),function(x) source(paste0("Restaurants/",x)))
str_to_1up <- function(x) {
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
str_remove_1gl <- function(x) {
substr(x,1,1)[substr(x,1,1) == "l" | substr(x,1,1) == "g"] <- ""
x
}
menu <- tibble(podnik = character(), polievka = character(), jedlo_1 = character(), jedlo_2 = character(), jedlo_3 = character(), jedlo_4 = character())
(menu[1,] <- bioland())
(menu[2,] <- bluebear())
(menu[3,] <- ceska())
(menu[4,] <- dilema())
(menu[5,] <- kasa(sme = TRUE))
(menu[6,] <- mestiansky())
(menu[7,] <- mnamka())
(menu[8,] <- veda())
(menu[9,] <- veglife())
(menu[10,] <- realstar())
(menu[11,] <- suvlaki())
(menu[12,] <- lenka())
(menu[13,] <- svadbykari())
(menu[14,] <- redcafe())
(menu[15,] <- hasic())
menu
menu %>% filter(all_vars(is.na()))
menu %>% filter(all_vars(is.na(.)))
menu %>% drop_na()
menu %>% !drop_na()
?drop_na
menu %>% filter(complete.cases())
menu %>% filter(complete.cases(polievka))
menu %>% filter(complete.cases())
?complete.cases
menu %>% filter(complete.cases(.))
menu %>% filter(!complete.cases(.))
?anyNA
menu %>% filter(!complete.cases(.)) %>% pull(podnik)
filter(!complete.cases(menu)) %>% pull(podnik)
filter(menu,!complete.cases(menu)) %>% pull(podnik)
message("These restaurants failed:",failed)
failed <- filter(menu,!complete.cases(menu)) %>% pull(podnik)
message("These restaurants failed:",failed)
failed <- c("Veglife","Veglife2")
message("These restaurants failed:",failed)
message(paste("These restaurants failed:",failed))
?paste
failed <- filter(menu,!complete.cases(menu)) %>% pull(podnik)
message(paste("These restaurants failed:",failed, collapse = ", "))
failed <- c("Veglife","Veglife2")
message(paste("These restaurants failed:",failed, collapse = ", "))
message(paste("These restaurants failed:",paste(failed, collapse = ", ")))
menu[9,2:6] <- c("Zeleninová kari polievka s quinoou","Pohánkovo - špenátové fašírky, hráškovo-zemiakové pyré","Gnocchi so syrovo-brokolicovou omáčkou a pažítkou", "Grilované robi plátky s cuketovo-kôprovou omáčkou, ryža natural", "Karfiolové karí s kešu orechami, ryža natural")
failed <- filter(menu,!complete.cases(menu)) %>% pull(podnik)
message(paste("These restaurants failed:",paste(failed, collapse = ", ")))
failed
length(failed)
failed <- filter(menu,!complete.cases(menu)) %>% pull(podnik)
if(length(failed) > 0 ) message(paste("These restaurants failed:",paste(failed, collapse = ", ")))
else message("All good.")
if(length(failed) > 0) {
message(paste("These restaurants failed:", paste(failed, collapse = ", ")))
} else
a
if(length(failed) > 0) {
message(paste("These restaurants failed:", paste(failed, collapse = ", ")))
} else message("All good.")
if(length(failed) > 0) {
message(paste("These restaurants failed:", paste(failed, collapse = ", ")))
} else message("All good.")
# menu[13,2:4] <- c("Zeleninová polievka so šampiňónmi","Indické Aloo Gobi s karfiolom, hráškom a zemiakmi, chilli-paradajkové čatní","Thajské žlté kari s hovädzím mäsom, farebnými paprikami, cuketou a batátmi, ľadový šalát s limetkovým dressingom")
#menu <- na.omit(menu)
#remove special slovak characters
source("slovak_language_destroyer.R",encoding="utf-8")
menu <-
menu %>%
mutate_all(.fun = slovak_language_destroyer)
# menu2 <-
#   menu2 %>%
#   mutate_all(.fun = slovak_language_destroyer)
#destroy the nuances in data
source("benson_string_destroyer.R")
menu <-
menu %>%
mutate_all(.fun = benson_string_destroyer)
# menu2 <-
#   menu2 %>%
#   mutate_all(.fun = benson_string_destroyer)
menu
remove_g_l <- function(x){
x <-
x %>%
str_replace_all("  l","") %>%
str_replace_all("  g","") %>%
str_replace_all(" g ","") %>%
str_replace_all(" l ","") %>%
str_replace_all("NA","") %>%
str_trim()
y <-
x %>%
str_sub(end = 2) %>%
str_remove_all("g ") %>%
str_remove_all("l ")
x <- paste0(y,str_sub(x,3))
return(x)
}
menu <-
menu %>% mutate_all(.fun = remove_g_l)
menu <-
menu %>%
mutate_all(.fun = str_remove_1gl)
#randomize order
#menu <- menu[sample(1:nrow(menu),nrow(menu)),]
menu <-
menu %>%
mutate_all(.fun =  str_to_1up)
menu <- menu %>% arrange(podnik)
# menu2
#save the menu in a text file as an ascii table
menu_ascii <- pandoc.table.return(menu, style = "grid", split.tables = Inf, split.cells = 30) %>% str_sub(3) # the last thing removes the first 2 /n
menu_ascii
write.table(menu_ascii,file = "menu.txt", row.names = F, col.names = F, quote = F)
# menu2_ascii <- pandoc.table.return(menu2, style = "grid", split.tables = Inf, split.cells = 30)
# write.table(menu2_ascii,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
beep <- readChar("beep_boop.txt",file.info("beep_boop.txt")$size)
write.table(beep,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
tabulecka <- tibble(Podnik = c("Bioland", "Ceska pivnica", "Dilema", "Kasa", "Mestiansky pivovar",
"Bistro Mnamka", "Veda", "Suvlaki", "Jedla lenka", "Svadby a kari", "Red Cafe", "U Hasica"),
Ulica = c("Mytna 23", "Radlinskeho 39","Sancova 70","Radlinskeho 11",
"Drevena 8","Vazovova 9", "Zilinska 2","Krizna 8","Cajkovskeho 14", "Americka 2",
"Racianske myto 1/A","Wilsonova 1"), TR_karta = T)
tabulecka[8,3] <- F
tabulecka[12,3] <- F
tabulecka <- pandoc.table.return(tabulecka, style = "grid", split.tables = Inf, split.cells = 30) %>% str_sub(3)
write.table(tabulecka,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
url <- "https://restauracie.sme.sk/restauracia/mestsky-pivovar-alzbetka_9975-stare-mesto_2949/denne-menu"
download.file(url, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".dnesne_menu .jedlo_polozka .left") %>% html_text()
jedlo
library(tidyverse)
library(rvest)
library(lubridate)
library(pander)
url <- "https://restauracie.sme.sk/restauracia/mestsky-pivovar-alzbetka_9975-stare-mesto_2949/denne-menu"
download.file(url, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".dnesne_menu .jedlo_polozka .left") %>% html_text()
jedlo
jedlo %>% str_trim()
jedlo %>%
str_trim() %>%
str_remove_all("FIT: ") %>%
str_remove_all("P1: ") %>%
str_remove_all("P2: ") %>%
str_remove_all("M1: ") %>%
str_remove_all("M2: ")
jedlo %>%
str_trim() %>%
str_remove_all("FIT: ") %>%
str_remove_all("P1: ") %>%
str_remove_all("P2: ") %>%
str_remove_all("M1: ") %>%
str_remove_all("M2: ") %>%
str_trim()
alzbetka <- function(){
url <- "https://restauracie.sme.sk/restauracia/mestsky-pivovar-alzbetka_9975-stare-mesto_2949/denne-menu"
download.file(url, destfile = "scrapedpage.html", quiet=TRUE)
raw <- read_html("scrapedpage.html")
jedlo <- raw %>%
html_nodes(".dnesne_menu .jedlo_polozka .left") %>% html_text()
jedlo <- jedlo %>%
str_trim() %>%
str_remove_all("FIT: ") %>%
str_remove_all("P1: ") %>%
str_remove_all("P2: ") %>%
str_remove_all("M1: ") %>%
str_remove_all("M2: ") %>%
str_trim()
return(c("Alzbetka", jedlo))
}
alzbetka
alzbetka()
#run web scraper
R.utils::sourceDirectory("Restaurants",encoding = "UTF-8")
#lapply(list.files("Restaurants"),function(x) source(paste0("Restaurants/",x)))
str_to_1up <- function(x) {
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
str_remove_1gl <- function(x) {
substr(x,1,1)[substr(x,1,1) == "l" | substr(x,1,1) == "g"] <- ""
x
}
menu <- tibble(podnik = character(), polievka = character(), jedlo_1 = character(), jedlo_2 = character(), jedlo_3 = character(), jedlo_4 = character())
(menu[1,] <- bioland())
(menu[2,] <- bluebear())
(menu[3,] <- ceska())
(menu[4,] <- dilema())
(menu[5,] <- kasa(sme = TRUE))
(menu[6,] <- mestiansky())
(menu[7,] <- mnamka())
(menu[8,] <- veda())
(menu[9,] <- veglife())
(menu[10,] <- realstar())
(menu[11,] <- suvlaki())
(menu[12,] <- lenka())
(menu[13,] <- svadbykari())
(menu[14,] <- redcafe())
(menu[15,] <- hasic())
(menu[16,] <- alzbetka())
failed <- filter(menu,!complete.cases(menu)) %>% pull(podnik)
if(length(failed) > 0) {
message(paste("These restaurants failed:", paste(failed, collapse = ", ")))
} else message("All good.")
#menu <- na.omit(menu)
#remove special slovak characters
source("slovak_language_destroyer.R",encoding="utf-8")
menu <-
menu %>%
mutate_all(.fun = slovak_language_destroyer)
# menu2 <-
#   menu2 %>%
#   mutate_all(.fun = slovak_language_destroyer)
#destroy the nuances in data
source("benson_string_destroyer.R")
menu <-
menu %>%
mutate_all(.fun = benson_string_destroyer)
# menu2 <-
#   menu2 %>%
#   mutate_all(.fun = benson_string_destroyer)
menu
remove_g_l <- function(x){
x <-
x %>%
str_replace_all("  l","") %>%
str_replace_all("  g","") %>%
str_replace_all(" g ","") %>%
str_replace_all(" l ","") %>%
str_replace_all("NA","") %>%
str_trim()
y <-
x %>%
str_sub(end = 2) %>%
str_remove_all("g ") %>%
str_remove_all("l ")
x <- paste0(y,str_sub(x,3))
return(x)
}
menu <-
menu %>% mutate_all(.fun = remove_g_l)
menu <-
menu %>%
mutate_all(.fun = str_remove_1gl)
#randomize order
#menu <- menu[sample(1:nrow(menu),nrow(menu)),]
menu <-
menu %>%
mutate_all(.fun =  str_to_1up)
menu <- menu %>% arrange(podnik)
# menu2
#save the menu in a text file as an ascii table
menu_ascii <- pandoc.table.return(menu, style = "grid", split.tables = Inf, split.cells = 30) %>% str_sub(3) # the last thing removes the first 2 /n
menu_ascii
write.table(menu_ascii,file = "menu.txt", row.names = F, col.names = F, quote = F)
# menu2_ascii <- pandoc.table.return(menu2, style = "grid", split.tables = Inf, split.cells = 30)
# write.table(menu2_ascii,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
beep <- readChar("beep_boop.txt",file.info("beep_boop.txt")$size)
write.table(beep,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
tabulecka <- tibble(Podnik = c("Bioland", "Ceska pivnica", "Dilema", "Kasa", "Mestiansky pivovar",
"Bistro Mnamka", "Veda", "Suvlaki", "Jedla lenka", "Svadby a kari", "Red Cafe", "U Hasica","Alzbetka"),
Ulica = c("Mytna 23", "Radlinskeho 39","Sancova 70","Radlinskeho 11",
"Drevena 8","Vazovova 9", "Zilinska 2","Krizna 8","Cajkovskeho 14", "Americka 2",
"Racianske myto 1/A","Wilsonova 1"), TR_karta = T, karta = T)
tabulecka[8,3] <- F
tabulecka[12,3] <- F
tabulecka[13,3] <- F
tabulecka[8,4] <- F
tabulecka[12,4] <- F
tabulecka <- arrange(tabulecka, Podnik)
tabulecka <- pandoc.table.return(tabulecka, style = "grid", split.tables = Inf, split.cells = 30) %>% str_sub(3)
write.table(tabulecka,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
tabulecka <- tibble(Podnik = c("Bioland", "Ceska pivnica", "Dilema", "Kasa", "Mestiansky pivovar",
"Bistro Mnamka", "Veda", "Suvlaki", "Jedla lenka", "Svadby a kari", "Red Cafe", "U Hasica","Alzbetka"),
Ulica = c("Mytna 23", "Radlinskeho 39","Sancova 70","Radlinskeho 11",
"Drevena 8","Vazovova 9", "Zilinska 2","Krizna 8","Cajkovskeho 14", "Americka 2",
"Racianske myto 1/A","Wilsonova 1","Mickiewiczova 1"), TR_karta = T, karta = T)
tabulecka[8,3] <- F
tabulecka[12,3] <- F
tabulecka[13,3] <- F
tabulecka[8,4] <- F
tabulecka[12,4] <- F
tabulecka <- arrange(tabulecka, Podnik)
tabulecka <- pandoc.table.return(tabulecka, style = "grid", split.tables = Inf, split.cells = 30) %>% str_sub(3)
write.table(tabulecka,file = "menu.txt",append = T, col.names = F, row.names = F, quote = F)
alzbetka()
